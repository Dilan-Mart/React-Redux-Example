{"version":3,"sources":["Components/Login.js","Components/Logout.js","App.js","Reducer/reducer.js","Reducer/Store/store.js","index.js"],"names":["connect","dispatch","setData","info","type","payload","userName","password","props","useState","setUserName","setPassword","onSubmit","event","preventDefault","logData","placeholder","value","onChange","e","target","state","logoutFn","onClick","loggedIn","className","initialState","Reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAmCeA,cAAQ,MAPE,SAAAC,GACrB,MAAM,CACFC,QAAQ,SAACC,GAAD,OAAQF,EAAS,CAACG,KAAK,QAAQC,QAAQ,CAACC,SAASH,EAAKG,SAASC,SAASJ,EAAKI,gBAK9EP,EAhCD,SAACQ,GACX,MAA6BC,mBAAS,IAAtC,mBAAOH,EAAP,KAAgBI,EAAhB,KACA,EAA6BD,mBAAS,IAAtC,mBAAOF,EAAP,KAAgBI,EAAhB,KAWA,OACI,8BACI,uBAAMC,SAXE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAQ,CACVT,SAASA,EACTC,SAASA,GAEbC,EAAMN,QAAQa,IAKV,UACI,uBAAOX,KAAK,OAAOY,YAAY,WAAWC,MAAOX,EAAUY,SAAU,SAAAC,GAAC,OAAET,EAAYS,EAAEC,OAAOH,UAC7F,uBAAOb,KAAK,WAAUY,YAAY,WAAWC,MAAOV,EAAUW,SAAU,SAAAC,GAAC,OAAER,EAAYQ,EAAEC,OAAOH,UAChG,uBAAOb,KAAK,SAASa,MAAM,kBCG5BjB,eAZI,SAAAqB,GACf,MAAM,CACFf,SAASe,EAAMf,aAID,SAAAL,GAClB,MAAM,CACFqB,SAAS,kBAAIrB,EAAS,CAACG,KAAK,eAIrBJ,EArBA,SAACQ,GACZ,OACI,gCACI,2CAAcA,EAAMF,YACpB,wBAAQiB,QAASf,EAAMc,SAAvB,0BCYGtB,eANO,SAAAqB,GACpB,MAAM,CACJG,SAASH,EAAMG,YAIJxB,EAdL,SAACQ,GACT,OACE,qBAAKiB,UAAU,MAAf,SACGjB,EAAMgB,SAAS,cAAC,EAAD,IAAW,cAAC,EAAD,S,cCR3BE,EAAa,CACfpB,SAAS,GACTC,SAAS,GACTiB,UAAS,GAyBEG,EAtBA,WAA8B,IAA7BN,EAA4B,uDAAtBK,EAAaE,EAAS,uCACxC,OAAQA,EAAOxB,MACX,IAAK,QACD,kCACOiB,GADP,IAEIf,SAASsB,EAAOvB,QAAQC,SACxBC,SAASqB,EAAOvB,QAAQE,SACxBiB,UAAS,IAEjB,IAAK,SACD,kCACOH,GADP,IAEIf,SAAS,GACTC,SAAS,GACTiB,UAAS,IAKrB,OAAOH,GCpBIQ,EAFHC,YAAYH,GCIxBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SAAwB,cAAC,EAAD,QAE1BK,SAASC,eAAe,W","file":"static/js/main.35d54ec9.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Login = (props) => {\r\n    const [userName,setUserName]=useState('');\r\n    const [password,setPassword]=useState('');\r\n\r\n    const submitter=(event)=>{\r\n        event.preventDefault();\r\n        const logData={\r\n            userName:userName,\r\n            password:password\r\n        }\r\n        props.setData(logData)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitter}>\r\n                <input type='text' placeholder=\"Username\" value={userName} onChange={e=>setUserName(e.target.value)} />\r\n                <input type='password'placeholder=\"Password\" value={password} onChange={e=>setPassword(e.target.value)} />\r\n                <input type=\"submit\" value=\"Login\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        setData:(info)=>dispatch({type:\"LOGIN\",payload:{userName:info.userName,password:info.password}})\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Login)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Logout = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Welcome, {props.userName}</h2>\r\n            <button onClick={props.logoutFn}>logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StateToProps=state=>{\r\n    return{\r\n        userName:state.userName\r\n    }\r\n}\r\n\r\nconst DispatchToProps=dispatch=>{\r\n    return{\r\n        logoutFn:()=>dispatch({type:\"LOGOUT\"})\r\n    }\r\n}\r\n\r\nexport default connect(StateToProps,DispatchToProps)(Logout)\r\n","import './App.css';\r\nimport Login from './Components/Login';\r\nimport Logout from './Components/Logout';\r\nimport {connect} from 'react-redux';\r\n\r\nconst App=(props)=> {\r\n  return (\r\n    <div className=\"App\">\r\n      {props.loggedIn?<Logout />:<Login />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n  return{\r\n    loggedIn:state.loggedIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const initialState={\r\n    userName:\"\",\r\n    password:\"\",\r\n    loggedIn:false\r\n};\r\n\r\nconst Reducer =(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return{\r\n                ...state,\r\n                userName:action.payload.userName,\r\n                password:action.payload.password,\r\n                loggedIn:true\r\n            }\r\n        case \"LOGOUT\":\r\n            return{\r\n                ...state,\r\n                userName:'',\r\n                password:'',\r\n                loggedIn:false\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state\r\n}\r\n\r\nexport default Reducer;","import {createStore} from 'redux';\r\nimport Reducer from '../reducer'\r\n\r\nconst store=createStore(Reducer)\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './Reducer/Store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}